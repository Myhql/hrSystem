<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hr.mapper.JobMapper" >
  <resultMap id="BaseResultMap" type="com.hr.entity.Job" >
    <id column="JOBID" property="jobid" jdbcType="DECIMAL" />
    <result column="JOBNAME" property="jobname" jdbcType="VARCHAR" />
    <result column="JOBTYPE" property="jobtype" jdbcType="VARCHAR" />
    <result column="LIMIT" property="limit" jdbcType="DECIMAL" />
    <result column="DEPTID" property="deptid" jdbcType="DECIMAL" />
    <association property="dept" javaType="com.hr.entity.Dept">
    	    <id column="DEPTID" property="deptid" jdbcType="DECIMAL" />
		    <result column="NAME" property="name" jdbcType="VARCHAR" />
		    <result column="TYPE" property="type" jdbcType="VARCHAR" />
		    <result column="TELE" property="tele" jdbcType="VARCHAR" />
		    <result column="FAX" property="fax" jdbcType="VARCHAR" />
		    <result column="DISCRIP" property="discrip" jdbcType="VARCHAR" />
		    <result column="SUPERID" property="superid" jdbcType="DECIMAL" />
		    <result column="CREATETIME" property="createtime" jdbcType="DATE" />
    	</association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    JOBID, JOBNAME, JOBTYPE, LIMIT, DEPTID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hr.entity.JobExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from JOB
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from JOB
    where JOBID = #{jobid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from JOB
    where JOBID = #{jobid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.hr.entity.JobExample" >
    delete from JOB
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hr.entity.Job" >
    insert into JOB (JOBID, JOBNAME, JOBTYPE, 
      LIMIT, DEPTID)
    values (seq_job_id.nextval, #{jobname,jdbcType=VARCHAR}, #{jobtype,jdbcType=VARCHAR}, 
      #{limit,jdbcType=DECIMAL}, #{deptid,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.hr.entity.Job" >
    insert into JOB
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        JOBID,
      </if>
      <if test="jobname != null" >
        JOBNAME,
      </if>
      <if test="jobtype != null" >
        JOBTYPE,
      </if>
      <if test="limit != null" >
        LIMIT,
      </if>
      <if test="deptid != null" >
        DEPTID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="jobid != null" >
        #{jobid,jdbcType=DECIMAL},
      </if>
      <if test="jobname != null" >
        #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="jobtype != null" >
        #{jobtype,jdbcType=VARCHAR},
      </if>
      <if test="limit != null" >
        #{limit,jdbcType=DECIMAL},
      </if>
      <if test="deptid != null" >
        #{deptid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hr.entity.JobExample" resultType="java.lang.Integer" >
    select count(*) from JOB
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update JOB
    <set >
      <if test="record.jobid != null" >
        JOBID = #{record.jobid,jdbcType=DECIMAL},
      </if>
      <if test="record.jobname != null" >
        JOBNAME = #{record.jobname,jdbcType=VARCHAR},
      </if>
      <if test="record.jobtype != null" >
        JOBTYPE = #{record.jobtype,jdbcType=VARCHAR},
      </if>
      <if test="record.limit != null" >
        LIMIT = #{record.limit,jdbcType=DECIMAL},
      </if>
      <if test="record.deptid != null" >
        DEPTID = #{record.deptid,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update JOB
    set JOBID = #{record.jobid,jdbcType=DECIMAL},
      JOBNAME = #{record.jobname,jdbcType=VARCHAR},
      JOBTYPE = #{record.jobtype,jdbcType=VARCHAR},
      LIMIT = #{record.limit,jdbcType=DECIMAL},
      DEPTID = #{record.deptid,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hr.entity.Job" >
    update JOB
    <set >
      <if test="jobname != null" >
        JOBNAME = #{jobname,jdbcType=VARCHAR},
      </if>
      <if test="jobtype != null" >
        JOBTYPE = #{jobtype,jdbcType=VARCHAR},
      </if>
      <if test="limit != null" >
        LIMIT = #{limit,jdbcType=DECIMAL},
      </if>
      <if test="deptid != null" >
        DEPTID = #{deptid,jdbcType=DECIMAL},
      </if>
    </set>
    where JOBID = #{jobid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hr.entity.Job" >
    update JOB
    set JOBNAME = #{jobname,jdbcType=VARCHAR},
      JOBTYPE = #{jobtype,jdbcType=VARCHAR},
      LIMIT = #{limit,jdbcType=DECIMAL},
      DEPTID = #{deptid,jdbcType=DECIMAL}
    where JOBID = #{jobid,jdbcType=DECIMAL}
  </update>
  
  <select id="nameselect" parameterType="String" resultType="Integer">
   select jobid from job where jobname=#{jobname}
  </select>
   <select id="selectByDeptid" parameterType="int" resultMap="BaseResultMap">
  		select * from job left outer join dept 
  			on job.deptid=dept.deptid 
  			where job.deptid=#{deptid}
  </select>
</mapper>