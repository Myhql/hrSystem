<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hr.mapper.SocietyrelationMapper" >
  <resultMap id="BaseResultMap" type="com.hr.entity.Societyrelation" >
    <id column="SOCIETYRELATIONID" property="societyrelationid" jdbcType="DECIMAL" />
    <result column="RELATION" property="relation" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="JOB" property="job" jdbcType="VARCHAR" />
    <result column="POSI" property="posi" jdbcType="VARCHAR" />
    <result column="TEL" property="tel" jdbcType="VARCHAR" />
    <result column="EMPID" property="empid" jdbcType="DECIMAL" />
      <association property="emp">
    	<id column="EMPID" property="empid" jdbcType="DECIMAL" />
	    <result column="NAME" property="name" jdbcType="VARCHAR" />
	    <result column="SEX" property="sex" jdbcType="VARCHAR" />
	    <result column="BIR" property="bir" jdbcType="DATE" />
	    <result column="IDCARD" property="idcard" jdbcType="VARCHAR" />
	    <result column="TOWORKTIME" property="toworktime" jdbcType="DATE" />
	    <result column="ZZMM" property="zzmm" jdbcType="VARCHAR" />
	    <result column="NATIONAL" property="national" jdbcType="VARCHAR" />
	    <result column="NATIVES" property="natives" jdbcType="VARCHAR" />
	    <result column="TELE" property="tele" jdbcType="VARCHAR" />
	    <result column="MAIL" property="mail" jdbcType="VARCHAR" />
	    <result column="HEIGHT" property="height" jdbcType="VARCHAR" />
	    <result column="BLOODTYPE" property="bloodtype" jdbcType="VARCHAR" />
	    <result column="BIRTHPLACE" property="birthplace" jdbcType="VARCHAR" />
	    <result column="HKPLACE" property="hkplace" jdbcType="VARCHAR" />
	    <result column="XL" property="xl" jdbcType="VARCHAR" />
	    <result column="DEGREE" property="degree" jdbcType="VARCHAR" />
	    <result column="GRADUATESCHOOL" property="graduateschool" jdbcType="VARCHAR" />
	    <result column="PROFESSIONAL" property="professional" jdbcType="VARCHAR" />
	    <result column="GRADUATETIME" property="graduatetime" jdbcType="DATE" />
    </association>
  </resultMap>
  
   <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SOCIETYRELATIONID, RELATION, NAME, JOB, POSI, TEL, EMPID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.hr.entity.SocietyrelationExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from SOCIETYRELATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from SOCIETYRELATION
    where SOCIETYRELATIONID = #{societyrelationid,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from SOCIETYRELATION
    where SOCIETYRELATIONID = #{societyrelationid,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.hr.entity.SocietyrelationExample" >
    delete from SOCIETYRELATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hr.entity.Societyrelation" >
    insert into SOCIETYRELATION (SOCIETYRELATIONID, RELATION, NAME, 
      JOB, POSI, TEL, EMPID
      )
    values (seq_societyrelation_id.nextval, #{relation,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR}, #{posi,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, #{empid,jdbcType=DECIMAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hr.entity.Societyrelation" >
    insert into SOCIETYRELATION
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="societyrelationid != null" >
        SOCIETYRELATIONID,
      </if>
      <if test="relation != null" >
        RELATION,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="job != null" >
        JOB,
      </if>
      <if test="posi != null" >
        POSI,
      </if>
      <if test="tel != null" >
        TEL,
      </if>
      <if test="empid != null" >
        EMPID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="societyrelationid != null" >
        #{societyrelationid,jdbcType=DECIMAL},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="posi != null" >
        #{posi,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="empid != null" >
        #{empid,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hr.entity.SocietyrelationExample" resultType="java.lang.Integer" >
    select count(*) from SOCIETYRELATION
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SOCIETYRELATION
    <set >
      <if test="record.societyrelationid != null" >
        SOCIETYRELATIONID = #{record.societyrelationid,jdbcType=DECIMAL},
      </if>
      <if test="record.relation != null" >
        RELATION = #{record.relation,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        NAME = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null" >
        JOB = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.posi != null" >
        POSI = #{record.posi,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null" >
        TEL = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.empid != null" >
        EMPID = #{record.empid,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SOCIETYRELATION
    set SOCIETYRELATIONID = #{record.societyrelationid,jdbcType=DECIMAL},
      RELATION = #{record.relation,jdbcType=VARCHAR},
      NAME = #{record.name,jdbcType=VARCHAR},
      JOB = #{record.job,jdbcType=VARCHAR},
      POSI = #{record.posi,jdbcType=VARCHAR},
      TEL = #{record.tel,jdbcType=VARCHAR},
      EMPID = #{record.empid,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hr.entity.Societyrelation" >
    update SOCIETYRELATION
    <set >
      <if test="relation != null" >
        RELATION = #{relation,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null" >
        JOB = #{job,jdbcType=VARCHAR},
      </if>
      <if test="posi != null" >
        POSI = #{posi,jdbcType=VARCHAR},
      </if>
      <if test="tel != null" >
        TEL = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="empid != null" >
        EMPID = #{empid,jdbcType=DECIMAL},
      </if>
    </set>
    where SOCIETYRELATIONID = #{societyrelationid,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hr.entity.Societyrelation" >
    update SOCIETYRELATION
    set RELATION = #{relation,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR},
      JOB = #{job,jdbcType=VARCHAR},
      POSI = #{posi,jdbcType=VARCHAR},
      TEL = #{tel,jdbcType=VARCHAR},
      EMPID = #{empid,jdbcType=DECIMAL}
    where SOCIETYRELATIONID = #{societyrelationid,jdbcType=DECIMAL}
  </update>
  
</mapper>